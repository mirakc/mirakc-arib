name: coverage

on:
  push:
    branches:
      - main
      - release
      - trial-*
    paths-ignore:
      - '**.md'
  # Don't run this workflow on pull_request.
  # This workflow uses secrets.
  pull_request_target:
    branches:
      - main
      - release
    paths-ignore:
      - '**.md'

jobs:
  coverage:
    # Skip if this workflow is triggered by dependabot.
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false
          submodules: recursive
      - name: Cache for external projects
        uses: actions/cache@v4
        with:
          path: build/vendor
          key: ${{ runner.os }}-coverage-${{ hashFiles('CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-coverage-
      - name: Cache for grcov
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-grcov
      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends autoconf automake cmake dos2unix g++ libtool make ninja-build pkg-config
      - name: Generate project files
        run: |
          cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Debug -D MIRAKC_ARIB_TEST=ON -D MIRAKC_ARIB_COVERAGE=ON
      - name: Build vendor libraries
        run: |
          ninja -C build vendor
      - name: Build
        run: |
          ninja -C build
      - name: Run test
        run: |
          ninja -C build test
          ninja -C build cli-tests
      - name: Install cargo-binstall
        run: |
          BINSTALL_URL=https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz
          curl -fsSL $BINSTALL_URL | tar -xz -C ~/.cargo/bin --no-same-owner
      - name: Install grcov
        run: |
          cargo binstall --no-confirm grcov
      - name: Generate coverage data
        run: >-
          grcov build --branch --llvm --ignore-not-existing -s . -p ..
          --ignore 'test/*'
          -t lcov -o lcov.info
      - name: Update to codecov.io
        uses: codecov/codecov-action@v5
        with:
         files: lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
